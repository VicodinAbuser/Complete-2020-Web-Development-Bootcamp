<%- include('partials/header') -%>

<h1 class='main-heading'>Welcome to The Daily Journal</h1>

<% if(!authenticated) { %>
    <h4 class='main-heading-subtitle'>See what people are writing and <a href="/login">login</a> to share your own experiences!</h4>
<% } else { %>
    <h4 class='main-heading-subtitle'>Start writing your own <a href='/compose'>blogpost</a> or an entirely private <a href='/compose'>journal entry</a>!</h4>
<% } %>

<% postsArray.forEach( (post) => { %>
    <% if(post.public) { %>
    <h3 id='post-heading'><a class='post-heading' href='/posts/<%=post._id%>'><%= post.title %></a></h3>

    <% if (post.post.length > 100) { %>

        <!-- for (let i = 99; i >= 5; i--) {
            if(post.post[i] === '>'){
                for (let j = i; j >= )
            }
        } -->
        <!-- post.post.replace('/^<.*>$', '') -->
        <% const postSubstring = post.post %>
        <p id='contentToTransform'><%= postSubstring.replace( /(<([^>]+)>)/ig, '').substring(0,90) + '...' %>
        <a href='/posts/<%=post._id%>'>Read more</a>
        </p>
        <a class='metadata' href='/profile/<%=post.authorId%>'><span><%=post.account%></span>
        <span><%=post.email%></span></a>

        <% if(authenticated) { %>
            <form class="like" action="/like" method="post">
                <% if(userLikedPosts.includes(post._id)) { %>
                    <input type="hidden" name="postId" value="<%=post._id%>">
                    <button class='btn  btn-xs' type="submit" name="liked" value='false'><i class="fa fa-thumbs-down"></i> Un Like</button><span><%=post.likes%> people like this.</span>
                <% } else { %>
                    <input type="hidden" name="postId" value="<%=post._id%>">
                    <button class='btn  btn-xs' type="submit" name="liked" value='true'><i class="fas fa-thumbs-up"></i> Like</button><span><%=post.likes%> people like this.</span>
                <% } %>
            </form>

        <% } else { %>
            <br><span><%=post.likes%> people like this.</span>
        <% } %>

    <% } else { %>
        <% const postString = post.post; %>
        <p id='contentToTransform'><%= postString.replace( /(<([^>]+)>)/ig, '') %></p>
        <a class='metadata' href='/profile/<%=post.authorId%>'><span><%=post.account%></span>
        <span><%=post.email%></span></a>
        <% if(authenticated) { %>
            <form class="like" action="/like" method="post">
                <% if(userLikedPosts.includes(post._id)) { %>
                    <input type="hidden" name="postId" value="<%=post._id%>">
                    <button class='btn  btn-xs' type="submit" name="liked" value='false'><i class="fa fa-thumbs-down"></i> Un Like</button><span><%=post.likes%> people like this.</span>
                <% } else { %>
                    <input type="hidden" name="postId" value="<%=post._id%>">
                    <button class='btn  btn-xs' type="submit" name="liked" value='true'><i class="fas fa-thumbs-up"></i> Like</button><span><%=post.likes%> people like this.</span>
                <% } %>
            </form>

        <% } else { %>
            <br><span><%=post.likes%> people like this.</span>
        <% } %>

    <% } %>
    <% } %>
<% }); %>

<!-- <script type="text/javascript">
    createYoutubeEmbed = (key) => {
  return '<iframe width="420" height="345" src="https://www.youtube.com/embed/' + key + '" frameborder="0" allowfullscreen></iframe><br/>';
};

transformYoutubeLinks = (text) => {
  if (!text) return text;
  const self = this;

  const linkreg = /(?:)<a([^>]+)>(.+?)<\/a>/g;
  const fullreg = /(https?:\/\/)?(www\.)?(youtube\.com\/watch\?v=|youtu\.be\/)([^& \n<]+)(?:[^ \n<]+)?/g;
  const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/watch\?v=|youtu\.be\/)([^& \n<]+)(?:[^ \n<]+)?/g;

  let resultHtml = text;

  // get all the matches for youtube links using the first regex
  const match = text.match(fullreg);
  if (match && match.length > 0) {
    // get all links and put in placeholders
    const matchlinks = text.match(linkreg);
    if (matchlinks && matchlinks.length > 0) {
      for (var i=0; i < matchlinks.length; i++) {
        resultHtml = resultHtml.replace(matchlinks[i], "#placeholder" + i + "#");
      }
    }

    // now go through the matches one by one
    for (var i=0; i < match.length; i++) {
      // get the key out of the match using the second regex
      let matchParts = match[i].split(regex);
      // replace the full match with the embedded youtube code
      resultHtml = resultHtml.replace(match[i], self.createYoutubeEmbed(matchParts[1]));
    }

    // ok now put our links back where the placeholders were.
    if (matchlinks && matchlinks.length > 0) {
      for (var i=0; i < matchlinks.length; i++) {
        resultHtml = resultHtml.replace("#placeholder" + i + "#", matchlinks[i]);
      }
    }
  }
  return resultHtml;
};

const htmlContent = document.getElementById('contentToTransform');
htmlContent.innerHTML = transformYoutubeLinks(htmlContent.innerHTML);
</script> -->



<%- include('partials/footer') -%>
